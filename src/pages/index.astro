---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

let collection: Coffee[] = [];
try {
  const response = await fetch(
    "https://raw.githubusercontent.com/devchallenges-io/web-project-ideas/main/front-end-projects/data/simple-coffee-listing-data.json"
  );
  if (response.ok) collection = await response.json();
} catch (err) {
  console.error(err);
}
---

<Layout>
  <section class="section wrapper">
    <div class="hero-wrapper">
      <img class="hero-image" src="./images/vector.svg" alt="" />
      <h2 class="section__title">Our Collection</h2>
      <p class="section__text">
        Introducing our Coffee Collection, a selection of unique coffees from
        different roast types and origins, expertly roasted in small batches and
        shipped fresh weekly.
      </p>
      <button class="tab" aria-selected="true" onclick="showAll()"
        >All Products</button
      >
      <button class="tab" aria-selected="false" onclick="showAvailable()"
        >Available Now</button
      >
    </div>
    <ul class="list">
      {
        collection.map((coffee) => (
          <li class="list__item">
            <Card product={coffee} />
          </li>
        ))
      }
    </ul>
  </section>
</Layout>

<script is:inline>
  const tabs = document.querySelectorAll(".tab");
  tabs.forEach((tab) =>
    tab.addEventListener("click", (evt) => {
      const targetTab = evt.target;
      tabs.forEach((tab) => {
        tab.removeAttribute("aria-selected");
      });
      targetTab.setAttribute("aria-selected", "true");
    })
  );

  const showAll = () => {
    const soldOuts = document.querySelectorAll("[data-sold-out]");
    soldOuts.forEach((card) => {
      card.parentElement.classList.remove("hide");
    });
  };

  const showAvailable = () => {
    console.log("hide");
    const soldOuts = document.querySelectorAll("[data-sold-out]");
    soldOuts.forEach((card) => {
      card.parentElement.classList.add("hide");
    });
  };
</script>
<style>
  .wrapper {
    --maxWidth: 26rem;
    --padding: 1rem;

    max-width: min(var(--maxWidth), 100% - (var(--padding) * 2));
    margin-inline: auto;
  }

  @media (min-width: 42rem) {
    .wrapper {
      --maxWidth: 42rem;
    }
  }

  @media (min-width: 70rem) {
    .wrapper {
      --maxWidth: 68rem;
    }
  }

  .section {
    background-color: var(--clr-neutral-600);
    padding-block: 8em 4em;
    margin-bottom: 4em;
    border-radius: 1em;
    overflow: hidden;
  }

  .hero-wrapper {
    text-align: center;
    margin-bottom: 3em;
    max-width: 30ch;
    margin-inline: auto;
  }

  .hero-wrapper,
  .section__text,
  .section__title {
    position: relative;
  }

  .hero-image {
    position: absolute;
    top: -50%;
    translate: 0 20%;
    left: 50%;
  }

  .section__title {
    font-size: var(--fs-700);
    margin-bottom: 0.5em;
  }

  .section__text {
    color: var(--clr-neutral-400);
  }

  .tab {
    background-color: transparent;
    border: 0;
    border-radius: 0.5em;
    padding: 0.5em 0.75em;
    color: var(--clr-neutral-100);
  }

  .tab + .tab {
    margin-left: 1em;
  }

  .tab[aria-selected="true"] {
    background-color: var(--clr-neutral-400);
  }

  .list {
    --cols: 1;

    display: grid;
    gap: 4em 1em;
    justify-content: center;
    grid-template-columns: repeat(var(--cols), 1fr);
    padding: 0;
    list-style: none;
    width: max-content;
    margin-inline: auto;
  }

  @media (min-width: 42rem) {
    .list {
      --cols: 2;
    }
  }

  @media (min-width: 70rem) {
    .list {
      --cols: 3;
    }
  }
</style>
